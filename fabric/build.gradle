plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}



dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"
    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    // Optional dependencies
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}")
    modImplementation("maven.modrinth:compost:Fabric-${minecraft_version}-${compost_version}")
    modImplementation("cc.cassian.item-descriptions:item-descriptions-fabric:${item_descriptions_version}+${minecraft_version}") {transitive =false}
    modImplementation("vectorwing:FarmersDelight:${fdrf_version}+refabricated") {
        exclude(group: "net.fabricmc")
        exclude(group: "me.shedaniel")
    }
    // Developer tools
    modImplementation("maven.modrinth:eiv:${eiv_version}-fabric")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:$rei_version")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin:$rei_version")
//    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"
    modRuntimeOnly("maven.modrinth:ferrite-core:CtMpt7Jr")
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}